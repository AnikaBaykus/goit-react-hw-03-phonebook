{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Notification/Notification.module.css","Components/Section/Section.jsx","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Notification/Notification.jsx","Components/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Container","container","ContactForm","state","name","props","number","formNameId","uuidv4","formNumberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","resetForm","form","this","label","htmlFor","input","id","type","pattern","required","onChange","placeholder","button","Component","defaultProps","ContactList","contacts","onDeleteContact","ul","map","li","p","onClick","Filter","inputID","Notification","message","App","filter","submitFormHandler","contact","toLowerCase","includes","alert","prevState","filterChange","getVisibleContact","normalizedFilter","deleteContact","contactId","visibleContact","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4fa78cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__38mIP\",\"label\":\"ContactForm_label__3yoZ9\",\"input\":\"ContactForm_input__1Xmms\",\"button\":\"ContactForm_button__YR7zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__1CEvd\",\"li\":\"ContactList_li__512_2\",\"p\":\"ContactList_p__2mCCq\",\"button\":\"ContactList_button__1CkQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1CwLV\",\"title\":\"Section_title__1_rVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label___Yu6N\",\"input\":\"Filter_input__3p6Yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3mMZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__bSN3L\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  formNameId = uuidv4();\n  formNumberId = uuidv4();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.formNameId}>\n          Name{' '}\n          <input\n            className={s.input}\n            id={this.formNameId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder={'Add name...'}\n          />\n        </label>\n\n        <label className={s.label} htmlFor={this.formNumberId}>\n          Number{' '}\n          <input\n            className={s.input}\n            id={this.formNumberId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            placeholder={'Add phone number...'}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          <p className={s.p}>\n            {name}: {number}\n          </p>{' '}\n          <button\n            className={s.button}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  const inputID = uuidv4();\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={inputID}>\n        Find contacts by name{' '}\n        <input\n          className={s.input}\n          id={inputID}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Enter name...\"\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification(props) {\n  const { message } = props;\n\n  return <h3 className={s.message}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport Section from './Section';\n\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Notification from './Notification';\n\nexport class App extends Component {\n  static defaultProps = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  state = {\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  };\n\n  submitFormHandler = ({ name, number }) => {\n    const idContact = uuidv4();\n\n    const contact = {\n      name: name,\n      number: number,\n      id: idContact,\n    };\n\n    const { contacts } = this.state;\n    const findCopyContact = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (findCopyContact) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  filterChange = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const { submitFormHandler, filterChange, deleteContact } = this;\n    const visibleContact = this.getVisibleContact();\n\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={submitFormHandler} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={filterChange}></Filter>\n          {contacts.length > 0 ? (\n            <ContactList\n              contacts={visibleContact}\n              onDeleteContact={deleteContact}\n            ></ContactList>\n          ) : (\n            <Notification message=\"No contacts\"></Notification>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}